// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @default(uuid())
  name      String
  email     String
  password  String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)

  @@map("USERS")
}

model Category {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)

  products Product[]
  @@map("CATEGORIES")
}

model Product {
  id          String   @id @default(uuid())
  name        String
  price       Float
  description String
  banner      String
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  updatedAt   DateTime @default(now()) @db.Timestamp(6)

  category    Category @relation(fields: [category_id], references: [id])
  category_id String

  items Item[]
  @@map("PRODUCTS")
}

model Order {
  id        String   @id @default(uuid())
  table     Int
  status    Boolean  @default(false)
  draft     Boolean  @default(true)
  name      String?
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)


  items Item[]
  @@map("ORDERS")
}

model Item {
  id     String @id @default(uuid())
  amount Float

  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)

  order   Order   @relation(fields: [order_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  order_id   String
  product_id String

  @@map("ORDERS_ITEMS")
}
